---
- name: Create PIP config
  file:
    path: "~/.config/pip/"
    state: directory
- name: Configure PIP
  copy:
    dest: "~/.config/pip/pip.conf"
    content: |
      [global]
      break-system-packages = true

- name: Install  HVAC
  pip:
    name: hvac

- name: Create Ansible dir
  file:
    path: /home/tamhid/ansible
    state: directory

- name: Copy each file over that matches the given pattern
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/tamhid/ansible"
  with_fileglob:
    - "../../kubernates/*"

- name: Login to Vault
  community.hashi_vault.vault_kv2_get:
    url: http://192.168.68.77:8200/
    engine_mount_point: secret
    path: postgres
    auth_method: token
  environment:
    VAULT_TOKEN: "{{ lookup('env', 'VAULT_TOKEN') }}"
  register: response


- name: Create postgres namespace and secrets
  copy:
    dest: "/home/tamhid/ansible/postgres-configmaps.yml"
    content: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: postgres-config
        labels:
          app: postgres
      data:
        POSTGRES_DB: postgres
        POSTGRES_USER: {{ item.key }}
        POSTGRES_PASSWORD: {{ item.value }}
  with_dict: "{{ response.secret }}"

- name: Run kubectl cmds
  shell: |
    microk8s kubectl apply -f /home/tamhid/ansible/postgres-configmaps.yml
    microk8s kubectl apply -f /home/tamhid/ansible/postgres-storage.yml
    microk8s kubectl apply -f /home/tamhid/ansible/postgres-deployment.yml
    microk8s kubectl apply -f /home/tamhid/ansible/postgres-service.yml

- name: Get NodePort
  shell: |
    microk8s kubectl get svc postgres -o json | jq -r '.spec' | jq -r '.ports[0]' | jq -r '.nodePort'
  register: portnum

- name: Portnum
  debug:
    msg: "{{ portnum.stdout }}"

# - name: Get facts
#   set_fact:
#     ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
#     port: "{{ portnum.stdout }}"
#     username: "{{ item.key }}"
#     pwd: "{{ item.value }}"
#   with_dict: "{{ response.secret }}"
  
# - name: Create DB conn file
#   local_action:
#     module: template
#     src: ../../templates/db_conn.j2
#     dest: /mnt/c/Users/tamhi/Documents/GIT/devops/manutd_flask/db_conn.json
