---
- name: Manage Servers
  hosts: pve
  become: yes

  tasks:
  - name: Run Terraform apply
    import_tasks: tasks/terraform-apply.yml
    delegate_to: 127.0.0.1
    when: tf_op == 'apply'

  - name: Get VMID
    shell: |
      qm list | grep "{{ vm_name }}" | awk '{split($0,a," "); print a[1]}'
    register: vmid
  
  - name: Get VM IP address
    shell: |
       qm guest cmd {{ vmid.stdout }} network-get-interfaces | jq  '.[1] | ."ip-addresses" | .[0] | ."ip-address"' | tr -d '"'
    register: vm_ip
  
  - name: VM_IP
    debug:
      msg: "{{ vm_ip.stdout }}"

  - name: Add host to group VM
    ansible.builtin.add_host:
      name: '{{ vm_ip.stdout }}'
      groups: VM
      ansible_ssh_user: "tamhid"
      ansible_ssh_private_key_file: "/home/tamhid/.ssh/id_ecdsa"


- name: Configure VM Server
  hosts: VM
  become: yes

  tasks:
  - name: Create TFBACUP Folder
    ansible.builtin.file:
      path: "/home/TF_FILES"
      state: directory
    when: tf_op == 'apply'
  - name: Copy Terraform Folder
    copy:
      src: "{{ playbook_dir }}/../{{ vm_name }}/"
      dest: /home/TF_FILES/
    when: tf_op == 'apply'
  - name: Change hostname
    hostname:
      name: "{{ vm_name }}"
    when: tf_op == 'apply'
  - name: Reboot VM
    reboot:
    when: tf_op == 'apply'
  
  - name: Create a VM folder
    ansible.builtin.file:
      path: "{{ playbook_dir }}/../{{ vm_name }}"
      state: directory
    delegate_to: 127.0.0.1
    when: tf_op == 'destroy'
  - name: Fetch all files from remote directory
    fetch:
      src: "/home/TF_FILES/{{ item }}"
      dest: "{{ playbook_dir }}/../{{ vm_name }}"
      flat: yes
    loop:
      - provider.tf
      - terraform.tfstate
    when: tf_op == 'destroy'
  - name: Terraform destroy
    command:
      chdir: "{{ playbook_dir }}/../{{ vm_name }}/TF_FILES/"
      cmd: "terraform destroy -auto-approve -lock=false"
    environment:
      TF_VAR_proxmox_api_token_id: "{{ lookup('env', 'TF_VAR_proxmox_api_token_id') }}"
      TF_VAR_proxmox_api_token_secret: "{{ lookup('env', 'TF_VAR_proxmox_api_token_secret') }}"
    register: terraform_destroy
    delegate_to: 127.0.0.1
    when: tf_op == 'destroy'

  - name: Terraform apply output
    debug:
      msg: "{{ terraform_destroy }}"
    delegate_to: 127.0.0.1
    when: tf_op == 'destroy'

